import json


def read_button(data):
    reply_markup_body = {
        "inline_keyboard": [
            [
                {
                    'text': '–ß–∏—Ç–∞—Ç—å üëÄ',
                    'url': data['object_attributes']['url'],
                }
            ]
        ]
    }
    return json.dumps(reply_markup_body)


def h_commit_comment(data):
    template = "–ö—É–¥–∞: {project_name} ({project_web_url})\n–ß—Ç–æ: –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –∫–æ–º–º–∏—Ç—É üí©\n–û —á—ë–º –±—ã–ª –∫–æ–º–º–∏—Ç: {commit_message}\n–ö–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ—Ç: {user_name} ({user_username}) "

    message = template.format(
        project_name=data['project']['name'],
        project_web_url=data['project']['web_url'],
        user_name=data['user']['name'],
        commit_message=data['commit']['message'],
        user_username=data['user']['username'],
    )

    return {
        'text': message,
        'reply_markup': read_button(data)
    }


def h_merge_request_comment(data):
    template = "–ö—É–¥–∞: {project_name} ({project_web_url})\n–ß—Ç–æ: –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –º–µ—Ä–¥–∂-—Ä–µ–∫–≤–µ—Å—Ç—É üí©\n–ó–∞–≥–æ–ª–æ–≤–æ–∫ –ú–†: {title}\n–í–µ—Ç–∫–∏: {source_branch} ‚û°Ô∏è {target_branch} \n–ö–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ—Ç: {user_name} ({user_username}) "

    message = template.format(
        project_name=data['project']['name'],
        project_web_url=data['project']['web_url'],
        user_name=data['user']['name'],
        user_username=data['user']['username'],
        title=data['merge_request']['title'],
        source_branch=data['merge_request']['source_branch'],
        target_branch=data['merge_request']['target_branch'],
    )

    return {
        'text': message,
        'reply_markup': read_button(data)
    }


def h_issue_comment(data):
    template = "–ö—É–¥–∞: {project_name} ({project_web_url})\n–ß—Ç–æ: –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ —Ç–∏–∫–µ—Ç—É üí©\n–¢–∏–∫–µ—Ç: {issue_title}\n–ö–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ—Ç: {user_name} ({user_username}) "

    message = template.format(
        project_name=data['project']['name'],
        project_web_url=data['project']['web_url'],
        user_name=data['user']['name'],
        issue_title=data['issue']['title'],
        user_username=data['user']['username'],
    )

    return {
        'text': message,
        'reply_markup': read_button(data)
    }


def h_snippet_comment(data):
    template = "–ö—É–¥–∞: {project_name} ({project_web_url})\n–ß—Ç–æ: –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ —Å–Ω–∏–ø–ø–µ—Ç—É üí©\n–°–Ω–∏–ø–ø–µ—Ç: {snippet_title}\n–ö–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ—Ç: {user_name} ({user_username}) "

    message = template.format(
        project_name=data['project']['name'],
        project_web_url=data['project']['web_url'],
        user_name=data['user']['name'],
        snippet_title=data['snippet']['title'],
        user_username=data['user']['username'],
    )

    return {
        'text': message,
        'reply_markup': read_button(data)
    }


def h_comment(data):
    resolvers = {
        'commit': h_commit_comment,
        'mergerequest': h_merge_request_comment,
        'issue': h_issue_comment,
        'snippet': h_snippet_comment
    }
    noteable_type = data['object_attributes']['noteable_type'].lower()
    return resolvers[noteable_type](data)
